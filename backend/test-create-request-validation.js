const axios = require('axios');

async function testCreateRequestValidation() {
  console.log('üß™ Test Create Request Validation...\n');

  const baseURL = 'http://localhost:5002';
  
  // Test data - s·ª≠ d·ª•ng container ƒë√£ t·ªìn t·∫°i
  const testData = {
    type: 'IMPORT',
    container_no: 'ISO 1234', // Container ƒë√£ t·ªìn t·∫°i
    eta: new Date().toISOString()
  };

  try {
    console.log('1. Test t·∫°o request v·ªõi container ƒë√£ t·ªìn t·∫°i:');
    console.log(`   Container: ${testData.container_no}`);
    console.log(`   Type: ${testData.type}`);
    
    const response = await axios.post(`${baseURL}/requests`, testData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token' // C·∫ßn token th·ª±c t·∫ø
      }
    });
    
    console.log('   ‚ùå Kh√¥ng n√™n th√†nh c√¥ng!');
    console.log('   Response:', response.data);
    
  } catch (error) {
    if (error.response) {
      console.log('   ‚úÖ Validation ho·∫°t ƒë·ªông ƒë√∫ng!');
      console.log(`   Status: ${error.response.status}`);
      console.log(`   Message: ${error.response.data.message}`);
    } else {
      console.log('   ‚ùå Network error:', error.message);
    }
  }

  // Test v·ªõi container m·ªõi
  console.log('\n2. Test t·∫°o request v·ªõi container m·ªõi:');
  const newTestData = {
    type: 'IMPORT',
    container_no: 'NEW123456', // Container m·ªõi
    eta: new Date().toISOString()
  };

  try {
    console.log(`   Container: ${newTestData.container_no}`);
    
    const response = await axios.post(`${baseURL}/requests`, newTestData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token'
      }
    });
    
    console.log('   ‚úÖ Request ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!');
    console.log('   Response:', response.data);
    
  } catch (error) {
    if (error.response) {
      console.log('   ‚ùå L·ªói kh√¥ng mong mu·ªën:');
      console.log(`   Status: ${error.response.status}`);
      console.log(`   Message: ${error.response.data.message}`);
    } else {
      console.log('   ‚ùå Network error:', error.message);
    }
  }

  console.log('\n‚úÖ Test ho√†n th√†nh!');
}

// Ch·∫°y test
testCreateRequestValidation();
