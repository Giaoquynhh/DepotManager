/**
 * Script test API m·ªõi: /containers/yard/by-shipping-line/:shipping_line_id
 * Test vi·ªác l·∫•y containers trong yard theo shipping line v·ªõi ƒëi·ªÅu ki·ªán:
 * - EMPTY_IN_YARD (SystemAdmin th√™m)
 * - GATE_OUT v·ªõi type IMPORT
 */

const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

// Th√¥ng tin test
const TEST_SHIPPING_LINE_ID = 'your-shipping-line-id'; // Thay b·∫±ng ID th·ª±c t·∫ø
const TEST_SEARCH_QUERY = 'CONT'; // T√¨m ki·∫øm container c√≥ ch·ª©a "CONT"

async function testYardContainersAPI() {
  try {
    console.log('üß™ Testing Yard Containers API...\n');

    // Test 1: L·∫•y t·∫•t c·∫£ containers trong yard theo shipping line
    console.log('üìã Test 1: L·∫•y t·∫•t c·∫£ containers trong yard theo shipping line');
    console.log(`GET /containers/yard/by-shipping-line/${TEST_SHIPPING_LINE_ID}`);
    
    const response1 = await axios.get(`${BASE_URL}/containers/yard/by-shipping-line/${TEST_SHIPPING_LINE_ID}`, {
      headers: {
        'Authorization': 'Bearer your-token-here' // Thay b·∫±ng token th·ª±c t·∫ø
      }
    });

    console.log('‚úÖ Response:', {
      success: response1.data.success,
      total: response1.data.total,
      containers: response1.data.data?.length || 0
    });

    if (response1.data.data && response1.data.data.length > 0) {
      console.log('üì¶ Sample container:', {
        container_no: response1.data.data[0].container_no,
        service_status: response1.data.data[0].service_status,
        request_type: response1.data.data[0].request_type,
        yard_location: `${response1.data.data[0].yard_name} - ${response1.data.data[0].block_code}-${response1.data.data[0].slot_code}`
      });
    }

    console.log('\n');

    // Test 2: T√¨m ki·∫øm containers v·ªõi query
    console.log('üîç Test 2: T√¨m ki·∫øm containers v·ªõi query');
    console.log(`GET /containers/yard/by-shipping-line/${TEST_SHIPPING_LINE_ID}?q=${TEST_SEARCH_QUERY}`);
    
    const response2 = await axios.get(`${BASE_URL}/containers/yard/by-shipping-line/${TEST_SHIPPING_LINE_ID}`, {
      params: { q: TEST_SEARCH_QUERY },
      headers: {
        'Authorization': 'Bearer your-token-here' // Thay b·∫±ng token th·ª±c t·∫ø
      }
    });

    console.log('‚úÖ Search Response:', {
      success: response2.data.success,
      total: response2.data.total,
      containers: response2.data.data?.length || 0
    });

    console.log('\n');

    // Test 3: Ki·ªÉm tra ƒëi·ªÅu ki·ªán l·ªçc
    console.log('üéØ Test 3: Ki·ªÉm tra ƒëi·ªÅu ki·ªán l·ªçc');
    if (response1.data.data && response1.data.data.length > 0) {
      const containers = response1.data.data;
      
      const emptyInYard = containers.filter(c => c.service_status === 'EMPTY_IN_YARD');
      const gateOutImport = containers.filter(c => c.service_status === 'GATE_OUT' && c.request_type === 'IMPORT');
      
      console.log(`üìä Ph√¢n lo·∫°i containers:`);
      console.log(`   - EMPTY_IN_YARD: ${emptyInYard.length} containers`);
      console.log(`   - GATE_OUT (IMPORT): ${gateOutImport.length} containers`);
      console.log(`   - T·ªïng c·ªông: ${containers.length} containers`);
      
      // Ki·ªÉm tra t·∫•t c·∫£ containers ƒë·ªÅu thu·ªôc 2 lo·∫°i n√†y
      const validContainers = containers.filter(c => 
        (c.service_status === 'EMPTY_IN_YARD') || 
        (c.service_status === 'GATE_OUT' && c.request_type === 'IMPORT')
      );
      
      if (validContainers.length === containers.length) {
        console.log('‚úÖ T·∫•t c·∫£ containers ƒë·ªÅu th·ªèa m√£n ƒëi·ªÅu ki·ªán l·ªçc');
      } else {
        console.log('‚ùå C√≥ containers kh√¥ng th·ªèa m√£n ƒëi·ªÅu ki·ªán l·ªçc');
      }
    }

    console.log('\nüéâ Test completed successfully!');

  } catch (error) {
    console.error('‚ùå Test failed:', error.response?.data || error.message);
  }
}

// Ch·∫°y test
if (require.main === module) {
  console.log('‚ö†Ô∏è  L∆∞u √Ω: C·∫ßn c·∫≠p nh·∫≠t TEST_SHIPPING_LINE_ID v√† Authorization token tr∆∞·ªõc khi ch·∫°y test\n');
  
  // Uncomment d√≤ng d∆∞·ªõi ƒë·ªÉ ch·∫°y test
  // testYardContainersAPI();
  
  console.log('ƒê·ªÉ ch·∫°y test, h√£y:');
  console.log('1. C·∫≠p nh·∫≠t TEST_SHIPPING_LINE_ID v·ªõi ID shipping line th·ª±c t·∫ø');
  console.log('2. C·∫≠p nh·∫≠t Authorization token');
  console.log('3. Uncomment d√≤ng testYardContainersAPI()');
  console.log('4. Ch·∫°y: node test-yard-containers-api.js');
}

module.exports = { testYardContainersAPI };
