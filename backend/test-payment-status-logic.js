// Test logic hi·ªÉn th·ªã t·ªïng ti·ªÅn theo tr·∫°ng th√°i thanh to√°n
const mockRequests = [
  {
    id: 'req1',
    container_no: 'SA888',
    status: 'CHECKED',
    is_paid: false, // Ch∆∞a thanh to√°n
    invoices: [
      {
        id: 'inv1',
        total_amount: 2350000 // C√≥ invoice nh∆∞ng ch∆∞a thanh to√°n
      }
    ]
  },
  {
    id: 'req2', 
    container_no: 'SA999',
    status: 'CHECKED',
    is_paid: true, // ƒê√£ thanh to√°n
    invoices: [
      {
        id: 'inv2',
        total_amount: 850000 // C√≥ invoice v√† ƒë√£ thanh to√°n
      }
    ]
  },
  {
    id: 'req3',
    container_no: 'SA777',
    status: 'CHECKED', 
    is_paid: false, // Ch∆∞a thanh to√°n
    invoices: [] // Kh√¥ng c√≥ invoice
  }
];

const lowerTotalLocal = 850000; // PriceList total

function calculateTotalAmount(request) {
  // Logic m·ªõi: ch·ªâ hi·ªÉn th·ªã t·ªïng ti·ªÅn t·ª´ invoice khi ƒë√£ thanh to√°n
  let totalAmount = 0;
  if (request.is_paid && request.invoices && request.invoices.length > 0) {
    // Ch·ªâ l·∫•y t·ª´ invoice khi ƒë√£ thanh to√°n
    const invoice = request.invoices[0];
    totalAmount = Number(invoice.total_amount || 0);
  } else {
    // S·ª≠ d·ª•ng PriceList cho c√°c tr∆∞·ªùng h·ª£p kh√°c
    totalAmount = Number.isFinite(lowerTotalLocal) ? lowerTotalLocal : 0;
  }
  return totalAmount;
}

console.log('üß™ Test Logic Hi·ªÉn th·ªã T·ªïng ti·ªÅn theo Tr·∫°ng th√°i Thanh to√°n...\n');

mockRequests.forEach((request, index) => {
  const totalAmount = calculateTotalAmount(request);
  const paymentStatus = request.is_paid ? 'ƒê√£ thanh to√°n' : 'Ch∆∞a thanh to√°n';
  
  console.log(`${index + 1}. Container: ${request.container_no}`);
  console.log(`   - Status: ${request.status}`);
  console.log(`   - Payment Status: ${paymentStatus}`);
  console.log(`   - Has Invoice: ${request.invoices.length > 0 ? 'Yes' : 'No'}`);
  
  if (request.invoices.length > 0) {
    console.log(`   - Invoice Amount: ${request.invoices[0].total_amount.toLocaleString('vi-VN')} VND`);
  }
  
  console.log(`   - Display Amount: ${totalAmount.toLocaleString('vi-VN')} VND`);
  
  if (request.is_paid) {
    console.log(`   - ‚úÖ Hi·ªÉn th·ªã t·ª´ invoice (ƒë√£ thanh to√°n)`);
  } else {
    console.log(`   - ‚ÑπÔ∏è Hi·ªÉn th·ªã t·ª´ PriceList (ch∆∞a thanh to√°n)`);
  }
  
  console.log('');
});

console.log('‚úÖ Expected Results:');
console.log('- Ch∆∞a thanh to√°n: Hi·ªÉn th·ªã 850.000 VND (t·ª´ PriceList)');
console.log('- ƒê√£ thanh to√°n: Hi·ªÉn th·ªã t·ª´ invoice (c√≥ th·ªÉ bao g·ªìm repair cost)');
console.log('- H√≥a ƒë∆°n ch·ªâ hi·ªÉn th·ªã khi tr·∫°ng th√°i = "ƒê√£ thanh to√°n"');
