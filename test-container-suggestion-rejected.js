const axios = require('axios');

// Test script ƒë·ªÉ ki·ªÉm tra logic g·ª£i √Ω container khi c√≥ tr·∫°ng th√°i REJECTED
async function testContainerSuggestionWithRejected() {
    try {
        console.log('üß™ Testing Container Suggestion with REJECTED status...\n');

        // Test v·ªõi m·ªôt shipping line c·ª• th·ªÉ
        const shippingLineId = 'your_shipping_line_id_here'; // Thay th·∫ø b·∫±ng ID th·ª±c t·∫ø
        
        console.log(`üì° Calling API: GET /containers/yard/by-shipping-line/${shippingLineId}`);
        
        const response = await axios.get(`http://localhost:5002/containers/yard/by-shipping-line/${shippingLineId}`, {
            headers: {
                'Content-Type': 'application/json',
                // Th√™m Authorization header n·∫øu c·∫ßn
                // 'Authorization': 'Bearer YOUR_TOKEN_HERE'
            }
        });

        console.log('‚úÖ API Response Status:', response.status);
        console.log('üìä Response Data:', JSON.stringify(response.data, null, 2));

        if (response.data.success && response.data.data) {
            const containers = response.data.data;
            console.log(`\nüì¶ Found ${containers.length} containers in yard`);
            
            // T√¨m containers c√≥ note v·ªÅ REJECTED
            const rejectedContainers = containers.filter(container => 
                container.note && container.note.includes('h·ªßy y√™u c·∫ßu')
            );
            
            console.log(`üîÑ Found ${rejectedContainers.length} containers that can be lifted again after rejection:`);
            rejectedContainers.forEach(container => {
                console.log(`  - ${container.container_no}: ${container.note}`);
                console.log(`    Location: ${container.block_code} - ${container.slot_code} (Tier ${container.tier})`);
                console.log(`    Quality: ${container.container_quality}`);
                console.log(`    Service Status: ${container.service_status}`);
                console.log('');
            });
        }

    } catch (error) {
        console.error('‚ùå Error testing container suggestion:', error.message);
        if (error.response) {
            console.error('Response Status:', error.response.status);
            console.error('Response Data:', error.response.data);
        }
    }
}

// Test v·ªõi search query
async function testContainerSuggestionWithSearch() {
    try {
        console.log('\nüîç Testing Container Suggestion with search query...\n');

        const shippingLineId = 'your_shipping_line_id_here'; // Thay th·∫ø b·∫±ng ID th·ª±c t·∫ø
        const searchQuery = 'IM'; // T√¨m containers b·∫Øt ƒë·∫ßu b·∫±ng "IM"
        
        console.log(`üì° Calling API: GET /containers/yard/by-shipping-line/${shippingLineId}?q=${searchQuery}`);
        
        const response = await axios.get(`http://localhost:5002/containers/yard/by-shipping-line/${shippingLineId}?q=${searchQuery}`, {
            headers: {
                'Content-Type': 'application/json',
                // Th√™m Authorization header n·∫øu c·∫ßn
                // 'Authorization': 'Bearer YOUR_TOKEN_HERE'
            }
        });

        console.log('‚úÖ API Response Status:', response.status);
        console.log('üìä Response Data:', JSON.stringify(response.data, null, 2));

    } catch (error) {
        console.error('‚ùå Error testing container suggestion with search:', error.message);
        if (error.response) {
            console.error('Response Status:', error.response.status);
            console.error('Response Data:', error.response.data);
        }
    }
}

// Ch·∫°y tests
async function runTests() {
    console.log('üöÄ Starting Container Suggestion Tests for REJECTED containers...\n');
    
    await testContainerSuggestionWithRejected();
    await testContainerSuggestionWithSearch();
    
    console.log('\n‚úÖ Tests completed!');
    console.log('\nüìù Instructions:');
    console.log('1. Replace "your_shipping_line_id_here" with actual shipping line ID');
    console.log('2. Add proper Authorization header if needed');
    console.log('3. Run: node test-container-suggestion-rejected.js');
    console.log('4. Check console logs for detailed information');
}

runTests();
